name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - staging

jobs:
  build-and-push-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Build Docker image
      run: docker build -t ghcr.io/${{ github.repository_owner }}/p2p-devops-test:latest -f devops/.docker/dockerfile .

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: akatruk/p2p-devops-test

    - name: Push Docker image to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker push ghcr.io/${{ github.repository_owner }}/p2p-devops-test:latest
  
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Staging
      run: |
        kubectl apply -f devops/argocd-stg.yml --validate=false
      env:
        KUBECONFIG: ${{ secrets.KUBE_CONFIG_DATA }}

  build-and-push-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Build Docker image
      run: docker build -t ghcr.io/${{ github.repository_owner }}/p2p-devops-test:latest -f devops/.docker/dockerfile .

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: akatruk/p2p-devops-test

    - name: Push Docker image to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker push ghcr.io/${{ github.repository_owner }}/p2p-devops-test:latest
  
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Production
      
      run: |
        kubectl apply -f devops/argocd-prod.yml --validate=false
      env:
        KUBECONFIG: ${{ secrets.KUBE_CONFIG_DATA }}